use_mit_license()
library(usethis)
use_mit_license()
pwd()
getwd()
library(devtools)
use_vignette("demo_details")
use_travis()
use_travis()
getwd()
source("R/demo.R")
demo()
roxygenise()
install.packages("roxygen2")
library(roxygen2)
roxygenise()
usethis::use_testthat()
use_test()
testthat::use_test()
usethis::use_test()
usethis::use_test()
getwd()
setwd("R)
""
getwd()
setwd("R")
usethis::use_test()
install.packages("badgecreatr")
help(badgecreatr)
library(badgecreatr)
help(badgecreatr)
badge_travis("ssppkenny", "demopackage", "master")
devtools::test()
devtools::test()
devtools::test()
devtools::test()
length("3344")
devtools::test()
getwd()
source("R/rates.R")
get_url("CHF", "RUB", 4, 4, 2020, 2021)
source("R/rates.R")
get_url("CHF", "RUB", 4, 4, 2020, 2021)
library(httr)
source("R/rates.R")
get_html("CHF", "RUB", 4, 4, 2020, 2021)
r <- get_html("CHF", "RUB", 4, 4, 2020, 2021)
class(r)
source("R/rates.R")
rng <- cur_range("CHF", "RUB", 4, 4, 2020, 2021)
rng["from_cur"]
r <- get_html(rng)
class(r)
headers(r)
h <- headers(r)
content(r, "text/html")
content(r, "text")
h
source("R/rates.R")
get_html(rng)
library(htmltab)
install.packages("htmltab")
library(htmltab)
url
myurl <- get_url(rng)
myurl
tables <- htmltab(doc = myurl, which = "//table[@border=1]")
tables
class(tables)
nrow(tables)
tables[1:365]
tables[1:365,]
tt <- tables[1:365,]
View(tt)
tt
library(dplyr)
tt
as.Date("Wednesday 03 March 2021")
library(lubridate)
parse_date_time("Saturday 16 May 2020")
parse_date_time("Saturday 16 May 2020", orders = "mdy")
install.packages("anytime")
library(anytime)
anydate("Wednesday 27 May 2020")
?as.Date
as.Date("Saturday 16 May 2020", format = "A d B Y")
as.Date("Saturday 16 May 2020", format = "%A %d %B %Y")
library(dplyr)
colnames(tt)
tt <- get_rates(rng)
source("R/rates.R")
tt <- get_rates(rng)
tt
source("R/rates.R")
tt <- get_rates(rng)
tt
library(ggplot2)
tt %>% ggplot(aes(x=Date, y=Value)) + geom_line()
tt %>% ggplot(aes(x=Date, y=Value)) + geom_point()
tt %>% ggplot(aes(x=Date, y=Value)) + geom_line()
tt <- get_rates(rng)
tt %>% ggplot(aes(x=Date, y=Value)) + geom_line()
tt$Date
tt$Date[1]
class(tt$Date[1])
tt %>% ggplot(aes(x=Date, y=Value)) + geom_line() + scale_x_date()
tt
source("R/rates.R")
tt <- get_rates(rng)
source("R/rates.R")
tt <- get_rates(rng)
source("R/rates.R")
tt <- get_rates(rng)
source("R/rates.R")
tt <- get_rates(rng)
tt %>% ggplot(aes(x=day, y=value)) + geom_line() + scale_x_date()
library(ggplot2)
tt %>% ggplot(aes(x=day, y=value)) + geom_line() + scale_x_date()
tt %>% ggplot(aes(x=day, y=value)) + geom_line() + scale_x_date(date_labels = "%m")
tt %>% ggplot(aes(x=day, y=value)) + geom_line() + scale_x_date(date_labels = "%m")
tt$value
as.Date("2020-4-1", format = "%Y-%m-%d")
from_date = as.Date(str_interp("${year_from}-${month}-${day}"), format = "%Y-%m-%d")
to_date = as.Date(str_interp("${year_to}-${month}-${day}"), format = "%Y-%m-%d")
from_date = as.Date("2020-04-04", format = "%Y-%m-%d")
to_date = as.Date("2021-04-04", format = "%Y-%m-%d")
to_date - from_date
(to_date - from_date)
class(to_date - from_date)
class(to_date - from_date)
as.numeric(to_date - from_date, units="days")
source("R/rates.R")
tt <- get_rates(rng)
tt %>% ggplot(aes(x=day, y=value)) + geom_line() + scale_x_date()
install.packages("parallel")
insall.packages("purrrr")
install.packages("purrrr")
install.packages("purrr")
install.packages("purrr")
install.packages("purrr")
install.packages("purrr")
install.packages("purrr")
install.packages("purrr")
install.packages("purrr")
library(purrr)
1:5 %>% map(function(x) {x+1})
source("R/rates.R")
source("R/rates.R")
create_ranges("CHF", "RUB", 4,4,2015, 2021)
ranges <- create_ranges("CHF", "RUB", 4,4,2015, 2021)
ranges[1]
ranges[1]["from_cur"]
ranges[1]
ranges[1]
ranges[1]
ranges[1]
ranges[1]$year_from
ranges[[1]]$year_from
length(ranges)
for x in ranges
for (x in ranges) print(x)
for (x in ranges) print(x[[1]])
for (x in ranges) print(x[[2]])
ranges
ranges[[1]]
ranges[[1]]$from_cur
source("R/rates.R")
source("R/rates.R")
ranges <- create_ranges("CHF", "RUB", 4,4,2015, 2021)
get_rates_multiple(ranges)
library(parallel)
get_rates_multiple(ranges)
library(parallel)
get_rates_multiple(ranges)
source("R/rates.R")
get_rates_multiple(ranges)
ranges <- create_ranges("CHF", "RUB", 4,4,2019, 2021)
ranges
get_rates_multiple(ranges)
detectCores()
unlist(ranges)
source("R/rates.R")
tt <- get_rates_multiple(ranges)
?cbind
source("R/rates.R")
tt <- get_rates_multiple(ranges)
tt
source("R/rates.R")
tt <- get_rates_multiple(ranges)
source("R/rates.R")
tt <- get_rates_multiple(ranges)
tt
library(ggplot2)
tt %>% ggplot(aes(x=day, y=value)) + geom_line()
ranges <- create_ranges("CHF", "RUB", 4,4,2018, 2021)
tt <- get_rates_multiple(ranges)
tt$day
max(tt$day)
min(tt$day)
ranges
source("R/rates.R")
ranges <- create_ranges("CHF", "RUB", 4,4,2019, 2021)
tt <- get_rates_multiple(ranges)
tt$percent
for (x in ranges) {print(x)}
source("R/rates.R")
tt <- get_rates_multiple(ranges)
min(tt$day)
source("R/rates.R")
tt <- get_rates_multiple(ranges)
tt[[1]]
tt[[2]]
source("R/rates.R")
tt <- get_rates_multiple(ranges)
source("R/rates.R")
tt <- get_rates_multiple(ranges)
tt[[2]]
tt[[1]]
tt[[2]]
ranges
source("R/rates.R")
tt <- get_rates_multiple(ranges)
source("R/rates.R")
tt <- get_rates_multiple(ranges)
tt
tt[1]
tt[2]
tt[1]
tt[1] %>% ggplot(aes(x=day, y=value)) + geom_line()
tt[[1]] %>% ggplot(aes(x=day, y=value)) + geom_line()
tt[[2]] %>% ggplot(aes(x=day, y=value)) + geom_line()
ranges
source("R/rates.R")
tt <- get_rates_multiple(ranges)
str_pad("0", 4)
str_pad(4, 2, "0")
str_pad(4, 2, "left", pad="0")
source("R/rates.R")
rng <- cur_range("CHF", "RUB", 4, 4, 2020, 2021)
get_rates(rng)
source("R/rates.R")
get_rates(rng)
source("R/rates.R")
get_rates(rng)
source("R/rates.R")
ranges
tt <- get_rates_multiple(ranges)
rng <- cur_range("CHF", "RUB", 4, 4, 2020, 2021)
rng <- cur_range("CHF", "RUB", 4, 4, 2019, 2020)
get_rates(rng)
tt <- get_rates(rng)
tt
min(tt$day)
max(tt$day)
ranges
tt <- get_rates_multiple(ranges)
source("R/rates.R")
tt <- get_rates_multiple(ranges)
source("R/rates.R")
tt <- get_rates_multiple(ranges)
tt
min(tt$day)
tt %>% ggplot(aes(x=day, y=value)) + geom_line()
ranges <- create_ranges("CHF", "RUB", 4, 4, 2015, 2020)
tt <- get_rates_multiple(ranges)
source("R/rates.R")
tt <- get_rates_multiple(ranges)
source("R/rates.R")
tt <- get_rates_multiple(ranges)
source("R/rates.R")
tt <- get_rates_multiple(ranges)
tt %>% ggplot(aes(x=day, y=value)) + geom_line()
source("R/rates.R")
tt <- get_rates_multiple(ranges)
source("R/rates.R")
tt <- get_rates_multiple(ranges)
tt
tt[[1]]
tt[[2]]
tt[[3]]
rbindlist(tt)
install.packages("data.table")
library(data.table)
rbindlist(tt)
source("R/rates.R")
tt <- get_rates_multiple(ranges)
tt %>% ggplot(aes(x=day, y=value)) + geom_line()
tt %>% ggplot(aes(x=value)) + geom_histogram()
tt %>% ggplot(aes(x=day, y=value)) + geom_line()
library(data.table)
length(2)
today()
now()
Sys.Date()
class(Sys.Date())
day(Sys.Date())
as.POSIXlt(Sys.Date())$day
as.POSIXlt(Sys.Date())
as.POSIXlt(Sys.Date())
as.POSIXlt(Sys.Date())$wday
as.POSIXlt(Sys.Date())$mday
as.POSIXlt(Sys.Date())$m
as.POSIXlt(Sys.Date())$month
as.POSIXlt(Sys.Date())$mon
as.POSIXlt(Sys.Date())$year
as.POSIXlt(Sys.Date())$lyear
as.POSIXlt(Sys.Date())$myear
as.POSIXlt(Sys.Date())year
as.POSIXlt(Sys.Date())$year
Sys.Date()Ã¤year
Sys.Date()$year
Sys.Date()
as.list(Sys.Date()9
as.list(Sys.Date())
lubridate:year(Sys.Date())
library(lubridate)
lubridate:year(Sys.Date())
lubridate::year(Sys.Date())
lubridate::day(Sys.Date())
lubridate::month(Sys.Date())
source("R/rates.R")
tt <- get_cur_rates()
source("R/rates.R")
tt <- get_cur_rates()
dim(rng
)
rng
source("R/rates.R")
tt <- get_cur_rates()
tt
tt <- get_cur_rates(year_from=2016)
source("R/rates.R")
tt <- get_cur_rates(rng=cur_range(from_year=2016))
tt <- get_cur_rates(rng=cur_range(year_from=2016))
cur_range(year_from)
cur_range(year_from=2016)
source("R/rates.R")
cur_range(year_from=2016)
source("R/rates.R")
cur_range(year_from=2016)
source("R/rates.R")
cur_range(year_from=2016)
tt <- get_cur_rates(cur_range(year_from=2016))
source("R/rates.R")
tt <- get_cur_rates(cur_range(year_from=2016))
rng
dim(cur_range())
ranges <- create_ranges("CHF","RUB", 4,4,2019, 2021)
dim(ranges)
str(ranges)
data.table(ranges)
dim(data.table(ranges)9
dim(data.table(ranges))
dim(data.table(cur_range()))
source("R/rates.R")
rng <- make_cur_range()
source("R/rates.R")
rng <- make_cur_range()
fetch(rng)
source("R/rates.R")
rng <- make_cur_range()
fetch(rng)
source("R/rates.R")
fetch(rng)
rng$data
t <- rng$data
t <- fetch(rng)
t
rng
rng <- make_cur_range()
rng
fetch(rng)
rng
source("R/rates.R")
rng <- make_cur_range()
rng
fetch(rng)
rng$data
source("R/rates.R")
rng <- make_cur_range()
rng$data
rng$to_cur
source("R/rates.R")
rng <- make_cur_range()
rng <- fetch(rng)
rng$data
source("R/rates.R")
rng <- make_cur_range()
rng <- fetch(rng)
source("R/rates.R")
rng <- make_cur_range()
rng <- fetch(rng)
source("R/rates.R")
rng <- fetch(rng)
rng
fetch(rng)
rng
rng <- make_cur_range()
rng
fetch(rng)
rng
source("R/rates.R")
rng <- make_cur_range()
fetch(rng)
rng
source("R/rates.R")
rng <- make_cur_range()
fetch(rng)
rng
source("R/rates.R")
rng <- make_cur_range()
fetch(rng)
rng
df <- fetch(rng)
df
source("R/rates.R")
rng <- make_cur_range()
df <- fetch(rng)
source("R/rates.R")
rng <- make_cur_range()
plot_range(rng)
source("R/rates.R")
rng <- make_cur_range()
plot_range(rng)
rng <- make_cur_range(year_from = 2016)
plot_range(rng)
rng
source("R/rates.R")
rng <- make_cur_range(year_from = 2016)
rng
df <- fetch(rng)
df
class(df)
range
rng
source("R/rates.R")
x <- seq(1,10)
y <- x^2
plot(x,y)
source("R/rates.R")
plot(x,y)
getwd()
source("R/rates.R")
x <- seq(1,10)
y <- x^2
plot(x,y)
source("R/rates.R")
plot(x,y)
library(roxygen2)
roxygenise()
roxygenise()
roxygenise()
roxygenise()
roxygenise()
library(roxygen2)
roxygenise()
library(roxygen2)
roxygenise()
roxygenise()
library(roxygen2)
roxygenise()
